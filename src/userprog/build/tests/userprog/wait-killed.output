Copying tests/userprog/wait-killed to scratch partition...
Copying tests/userprog/child-bad to scratch partition...
qemu-system-i386 -device isa-debug-exit -hda /tmp/aQ6mKDIRiE.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading..........
Kernel command line: -q -f extract run wait-killed
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  550,502,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 173 sectors (86 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 203 sectors (101 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-killed' into the file system...
Putting 'child-bad' into the file system...
Erasing ustar archive...
Executing 'wait-killed':
(wait-killed) begin
-------------------------CALLED WAIT

wait-killed: exit(-1)
(child-bad) begin
Page fault at 0x20101234: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002bfb6
 cr2=20101234 error=00000000
 eax=20101234 ebx=20101234 ecx=000000ad edx=00000030
 esi=c0113fb0 edi=00000000 esp=20101234 ebp=c0113fe8
 cs=0008 ds=0010 es=0010 ss=5420
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc00287cf 0xc002bfb6 0x80480aa.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 101 ticks
Thread: 0 idle ticks, 98 kernel ticks, 3 user ticks
hda2 (filesys): 122 reads, 412 writes
hda3 (scratch): 202 reads, 2 writes
Console: 1553 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
